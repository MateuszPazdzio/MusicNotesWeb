// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicNotesWeb.Infrastructure;

#nullable disable

namespace MusicNotesWeb.Infrastructure.Migrations
{
    [DbContext(typeof(MusicNotesDbContext))]
    partial class MusicNotesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MusicNotesWeb.Entity.models.GameDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GameDetails");
                });

            modelBuilder.Entity("MusicNotesWeb.Entity.models.NoteAttempt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpectedNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameDetailsId")
                        .HasColumnType("int");

                    b.Property<int>("OctaveNr")
                        .HasColumnType("int");

                    b.Property<string>("PlayedNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GameDetailsId");

                    b.ToTable("NoteAttempts");
                });

            modelBuilder.Entity("MusicNotesWeb.Entity.models.NoteAttempt", b =>
                {
                    b.HasOne("MusicNotesWeb.Entity.models.GameDetails", "GameDetails")
                        .WithMany("Attempts")
                        .HasForeignKey("GameDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameDetails");
                });

            modelBuilder.Entity("MusicNotesWeb.Entity.models.GameDetails", b =>
                {
                    b.Navigation("Attempts");
                });
#pragma warning restore 612, 618
        }
    }
}
